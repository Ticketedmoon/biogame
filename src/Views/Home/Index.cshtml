@{
    ViewData["Title"] = "Home Page";
}

@section scripts{
<script type="text/javascript">

// On load
const loadTable = () => {
    fetch("http://localhost:5003/todoitems")
        .then((response) => response.json())
        .then((json) => {

            if (json.length === 0) {
                return
            }

            const tableContainer = document.getElementById("table-container");
            tableContainer.innerHTML = "";

            const tableIdentifier = "todo-list";
            const table = document.createElement("table");
            table.setAttribute("id", tableIdentifier);

            tableContainer.appendChild(table);

            const tableHeader = table.createTHead();
            const tableHeaderRow = tableHeader.insertRow(0)
            const headers = ["id", "description", "completion status"]
            
            headers.forEach((value, index) => {
                const cell = tableHeaderRow.insertCell(index);
                cell.innerHTML = `<b>${value}</b>`;
            })

            const tableBody = table.createTBody();

            json.forEach((item, i) => {
                const newRow = tableBody.insertRow();

                // TODO: issue not fully resolved, We don't want escaped version displayed on ui
                const item_description = "'" + item.name
                    .replace(/[\""]/g, '\\"')
                    .replace(/[\'']/g, "\\'")
                     + "'";

                newRow.insertCell().append(item.id);
                newRow.insertCell().append(item_description);
                newRow.insertCell().append(item.is_complete);
                
                const cell = newRow.insertCell();
                cell.innerHTML = `<button onclick="markTodoItemCompleted(${item.id}, ${item_description})">Mark Completed</button>`;
            });
        });
}

const handleNewTodoItemSubmission = () => {

    const todoTextAreaId = "new-todo-list-item-text-area-1"
    
    const e = document.getElementById(todoTextAreaId)

    if (!e.value)
    {
        alert("No todo item text was entered");
        return;
    }
    
    fetch("http://localhost:5003/todoitems", {
        method: "POST",
        body: JSON.stringify(e.value),
        headers: {
            "Content-type": "application/json; charset=UTF-8"
        }
    }).then(() => loadTable());
}

const markTodoItemCompleted = (id, name) => {

    fetch(`http://localhost:5003/todoitems/${id}`, {
        method: "PUT",
        body: JSON.stringify({id, name, is_complete: true}) ,
        headers: {
            "Content-type": "application/json; charset=UTF-8"
        }
    }).then(() => loadTable());
}

window.onload = () => {
    loadTable()
}

</script>
}

<div class="text-center">
    <h2 class="display-4">Todo List</h2>
    <p>Learn about <a href="https://learn.microsoft.com/aspnet/core">building Web apps with ASP.NET Core</a>.</p>
    
    <hr/>
    
    <div class="todo-list-management-container">
        <div>
            <p>Add a new Todo Item: </p>
            <textarea id="new-todo-list-item-text-area-1"
                      name="todoTextArea"
                      rows="3"
                      cols="50"></textarea>
            <br>
            <button type="button" onclick="handleNewTodoItemSubmission()"> Add Item </button>
        </div>
        <div class="todo-list-divider">
            <hr/>
        </div>
        <div id="table-container"/>
    </div>
</div>
